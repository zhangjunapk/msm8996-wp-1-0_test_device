#ifndef __ICRYPTO_H
#define __ICRYPTO_H

// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

// Copyright (c) 2015 Qualcomm Technologies, Inc.  All Rights Reserved.

// Qualcomm Technologies Proprietary and Confidential.

#define ICrypto_CMAC_ALGO_AES_128 INT32_C(1)
#define ICrypto_CMAC_ALGO_AES_256 INT32_C(2)
#define ICrypto_CMAC_ALGO_INVALID INT32_C(99)

#define ICrypto_OP_cmac 0
#define ICrypto_OP_kdf 1

static inline int32_t
ICrypto_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
ICrypto_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
ICrypto_cmac(Object self, int32_t alg_val, const void *msg_ptr, size_t msg_len, const void *key_ptr, size_t key_len, void *digest_ptr, size_t digest_len, size_t *digest_lenout)
{
  ObjectArg a[4];
  a[0].b = (ObjectBuf) { &alg_val, sizeof(int32_t) };
  a[1].bi = (ObjectBufIn) { msg_ptr, msg_len * 1 };
  a[2].bi = (ObjectBufIn) { key_ptr, key_len * 1 };
  a[3].b = (ObjectBuf) { digest_ptr, digest_len * 1 };

  int32_t result = Object_invoke(self, ICrypto_OP_cmac, a, ObjectCounts_pack(3, 1, 0, 0));

  *digest_lenout = a[3].b.size / 1;

  return result;
}

static inline int32_t
ICrypto_kdf(Object self, const void *key_ptr, size_t key_len, const void *label_ptr, size_t label_len, const void *context_ptr, size_t context_len, void *output_ptr, size_t output_len, size_t *output_lenout)
{
  ObjectArg a[4];
  a[0].bi = (ObjectBufIn) { key_ptr, key_len * 1 };
  a[1].bi = (ObjectBufIn) { label_ptr, label_len * 1 };
  a[2].bi = (ObjectBufIn) { context_ptr, context_len * 1 };
  a[3].b = (ObjectBuf) { output_ptr, output_len * 1 };

  int32_t result = Object_invoke(self, ICrypto_OP_kdf, a, ObjectCounts_pack(3, 1, 0, 0));

  *output_lenout = a[3].b.size / 1;

  return result;
}


#endif /* __ICRYPTO_H */